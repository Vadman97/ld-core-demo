name: "Build and Deploy Images to Test Environment"

on:
  branches:
    - '*demoenv*' # This workflow will run on any branch that contains the word "demoenv"
  types: [created] # This workflow will run when a new branch is created

env: # Environment variables
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  ECR_REPOSITORY: ld-core-demo
  KUBECTL_VERSION: "v1.23.0"
  LD_API_KEY: ${{ secrets.LD_API_KEY }} 

jobs: # Jobs to be executed
  deploy-to-demoenv: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set namespace for deployment
        id: set_namespace
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          NAMESPACE=${BRANCH_NAME#demoenv-}
          echo "DEMO_NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV 
          echo "::set-output name=namespace::$NAMESPACE"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./.github/workflows/requirements.txt

      - name: Create LD Project for User
        id: create_ld_project
        run: |
          echo "Creating LaunchDarkly project for namespace: ${{ env.DEMO_NAMESPACE }}
          python ./.github/workflows/create_ld_project.py
        env:
          LD_API_KEY: ${{ secrets.LD_API_KEY }}
          NAMESPACE: ${{ env.DEMO_NAMESPACE }}
          
      - name: Create .env file
        run: |
          touch ./.env.production
          echo NEXT_PUBLIC_LD_CLIENT_KEY=${{ env.LD_CLIENT_KEY }} >> ./.env.production
          echo LD_SDK_KEY=${{ env.LD_SDK_KEY }} >> ./.env.production
          echo DB_URL=${{ secrets.DB_URL }} >> ./.env.production
          echo LD_API_KEY=${{ secrets.LD_API_KEY }} >> ./.env.production
          echo DESTINATIONENV=test >> ./.env.production
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ld-core-demo
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update K8s Deploy File
        run: python ./.github/workflows/update_k8s_deploy_file.py
        env:
          NAMESPACE: ${{ env.DEMO_NAMESPACE }}
          URL: ${{ env.DEMO_NAMESPACE }}.launchdarklydemos.com
          IMAGE: ${{ steps.login-ecr.outputs.registry }}/ld-core-demo:latest

      - name: Create Namespace In Kubernetes
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: create namespace ${{ env.DEMO_NAMESPACE }}

      - name: Applying deploy file to Kubernetes
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: apply -f ./.github/workflows/deploy_files/deploy.yaml -n ${{ env.DEMO_NAMESPACE }}

      - name: Delete the deploy file
        run: rm -rf ./.github/workflows/deploy_files

      - name: Remove .env file
        run: rm ./.env.production